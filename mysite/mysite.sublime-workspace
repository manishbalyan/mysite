{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"re",
				"request"
			],
			[
				"tr",
				"try	Try/Except"
			],
			[
				"que",
				"question"
			],
			[
				"q",
				"question_id"
			],
			[
				"htt",
				"HttpResponse"
			],
			[
				"qu",
				"question_id"
			],
			[
				"H",
				"HttpResponse"
			],
			[
				"pu",
				"pub_date"
			],
			[
				"ch",
				"choice_text"
			],
			[
				"ur",
				"url"
			]
		]
	},
	"buffers":
	[
		{
			"file": "mysite/settings.py",
			"settings":
			{
				"buffer_size": 3196,
				"line_ending": "Unix"
			}
		},
		{
			"file": "polls/models.py",
			"settings":
			{
				"buffer_size": 707,
				"line_ending": "Unix"
			}
		},
		{
			"file": "polls/urls.py",
			"settings":
			{
				"buffer_size": 401,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from django.shortcuts import get_object_or_404, render\nfrom django.http import HttpResponse, HttpResponseRedirect\nfrom django.core.urlresolvers import reverse\nfrom django.template import loader\nfrom .models import Question, Choice\n# Create your views here.\n\ndef index(request):\n	latest_question_list = Question.objects.order_by('-pub_date')[:5]\n	context = {\n		'latest_question_list': latest_question_list\n	}\n	return render(request, 'polls/index.html', context)\n\ndef detail(request, question_id):\n	question = get_object_or_404(Question, pk=question_id)\n	return render(request, 'polls/detail.html')\n\ndef results(request, question_id):\n	response = \"you are looking at the question %s.\"\n	return HttpResponse(response %question_id)\n\ndef vote(request, question_id):\n	question = get_object_or_404(Question, pk=question_id)\n	try:\n		selected_choice = question.choice_set.get(pk=request.pos)\n	except Exception, e:\n		raise e",
			"file": "polls/views.py",
			"file_size": 815,
			"file_write_time": 131121942289858148,
			"settings":
			{
				"buffer_size": 913,
				"line_ending": "Unix"
			}
		},
		{
			"file": "polls/templates/polls/index.html",
			"settings":
			{
				"buffer_size": 267,
				"line_ending": "Unix",
				"name": "{% if latest_question_list %}"
			}
		},
		{
			"contents": "<h1>{{ question.question_text }}</h1>\n\n{% if error_message %}\n	<p><strong>{{ error_message }}</strong></p>\n{% endif %}\n\n<form action=\"{% url 'polls:vote' question.id %}\" method=\"post\">\n	{% csrf_token %}\n	{% for choice in question.choice_set.all %}\n    	<input type=\"radio\" name=\"choice\" id=\"choice{{ forloop.counter }}\" value=\"{{ choice.id }}\" />\n    	<label for=\"choice{{ forloop.counter }}\">{{ choice.choice_text }}</label><br />\n	{% endfor %}\n	<input type=\"submit\" value=\"Vote\" />\n</form>",
			"file": "polls/templates/polls/detail.html",
			"file_size": 125,
			"file_write_time": 131121940608498146,
			"settings":
			{
				"buffer_size": 491,
				"line_ending": "Unix",
				"name": "{{question}}"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/comp05/Documents/manish",
		"/home/comp05/Documents/manish/mysite",
		"/home/comp05/Documents/manish/mysite/mysite",
		"/home/comp05/Documents/manish/mysite/polls",
		"/home/comp05/Documents/manish/mysite/polls/templates",
		"/home/comp05/Documents/manish/mysite/polls/templates/polls"
	],
	"file_history":
	[
		"/home/comp05/Documents/manish/mysite/mysite/urls.py",
		"/home/comp05/Documents/manish/mysite/polls/admin.py"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mysite/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3196,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "polls/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 707,
						"regions":
						{
						},
						"selection":
						[
							[
								371,
								371
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "polls/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 401,
						"regions":
						{
						},
						"selection":
						[
							[
								401,
								401
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "polls/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 913,
						"regions":
						{
						},
						"selection":
						[
							[
								880,
								880
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "polls/templates/polls/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 267,
						"regions":
						{
						},
						"selection":
						[
							[
								267,
								267
							]
						],
						"settings":
						{
							"auto_name": "{% if latest_question_list %}",
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "polls/templates/polls/detail.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 491,
						"regions":
						{
						},
						"selection":
						[
							[
								491,
								491
							]
						],
						"settings":
						{
							"auto_name": "{{question}}",
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "mysite.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
